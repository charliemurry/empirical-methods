n = 200
X1 = runif(n, min=0, max=4*pi)
X2 = sample(c(0,1), replace=TRUE, size=n)
beta = 0.1
Y = sin(X) + beta * X2  + rnorm(200, sd=0.4)
1
Y = sin(X1) + beta * X2  + rnorm(200, sd=0.4)
plot(X1,Y, pch=1)
plot(X2,Y, pch=1)
beta = 0.5
Y = sin(X1) + beta * X2  + rnorm(200, sd=0.4)
plot(X1,Y, pch=1)
beta = 1
Y = sin(X1) + beta * X2  + rnorm(200, sd=0.4)
plot(X1,Y, pch=1)
n = 200
Z = runif(n, min=0, max=4*pi)
X = sample(c(0,1), replace=TRUE, size=n)
beta = 1
Y = sin(Z) + beta * X  + rnorm(200, sd=0.4)
plot(Z,Y, pch=1)
m_y <- ksmooth(x=Z,y=Y,kernel = "normal",bandwidth = 0.9)
m_y <- ksmooth(x=X,y=Y,kernel = "normal",bandwidth = 0.9)
m_x <- ksmooth(x=X,y=Y,kernel = "normal",bandwidth = 0.9)
m_y <- ksmooth(x=Z,y=Y,kernel = "normal",bandwidth = 0.9)
m_y <- ksmooth(x=Z,y=Y,kernel = "normal",bandwidth = 0.9)$y
m_x <- ksmooth(x=X,y=Y,kernel = "normal",bandwidth = 0.9)$y
YY = Y - m_y
XX = X-m_x
fit = lm(YY~XX)
n = 200
Z = runif(n, min=0, max=4*pi)
X = sample(c(0,1), replace=TRUE, size=n)
H = sample(c(0,1), replace=TRUE, size=n)
Z = X + .2*X*H  # Induce some correlation between Z and X through a binary variable H
beta = 1
Y = sin(Z) + beta * X  + rnorm(200, sd=0.4)
plot(Z,Y, pch=1)
plot(X,Y, pch=1)
Z = Z + .2*X*H  # Induce some correlation between Z and X through a binary variable H
Z = runif(n, min=0, max=4*pi)
X = sample(c(0,1), replace=TRUE, size=n)
H = sample(c(0,1), replace=TRUE, size=n)
Z = Z + .2*X*H  # Induce some correlation between Z and X through a binary variable H
beta = 1
Y = sin(Z) + beta * X  + rnorm(200, sd=0.4)
plot(X,Y, pch=1)
plot(Z,Y, pch=1)
m_y <- ksmooth(x=Z,y=Y,kernel = "normal",bandwidth = 0.9)$y
m_x <- ksmooth(x=X,y=Y,kernel = "normal",bandwidth = 0.9)$y
YY = Y - m_y
XX = X-m_x
fit = lm(YY~XX)
fit.coefficients(1)
fit.coefficients(2)
fit[1](2)
fit[1][2]
fit[1][1]
fit[1][1][2]
fit[1][1][1]
fit[1][1]
fit[1]
fit[1](1)
fit[1].1
fit[1]
fit.ciefficients
